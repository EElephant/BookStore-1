<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx
         http://www.springframework.org/schema/tx/spring-tx.xsd">

    <context:component-scan base-package="top.yimiaohome"/>
    <aop:aspectj-autoproxy proxy-target-class="true"/>
    <tx:annotation-driven transaction-manager="txManager" proxy-target-class="true" />

    <!--
       shiro缓存管理器
   -->
    <bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
        <property name="cacheManagerConfigFile" value="classpath:ehcache-shiro.xml"/>
    </bean>

    <!--
        自定义Realm
        参数为设置加密器
        shiro提供的加密器，加密方法为md5，加密次数1
    -->
    <bean id="userDao" class="top.yimiaohome.dao.UserDao"/>
    <bean id="customRealm" class="top.yimiaohome.shiro.CustomRealm" init-method="onInit">
        <property name="credentialsMatcher">
            <bean class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
                <property name="hashAlgorithmName" value="MD5"></property> <!-- 加密算法的名称 -->
                <property name="hashIterations" value="1"></property> <!-- 配置加密的次数 -->
            </bean>
        </property>
    </bean>

    <!--
        shiro的安全管理器
    -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="cacheManager" ref="cacheManager"/>
        <property name="realm" ref="customRealm"/>
    </bean>

    <!--
        shiro的生命周期管理
    -->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>

    <!--
        DefaultAdvisorAutoProxyCreator搜索容器中的 advisor,并为每个bean创建代理
    -->
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor">
        <property name="proxyTargetClass" value="true"/>
    </bean>

    <!--
        shiro spring aop
    -->
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>

    <!--
        shiro 过滤器
        属性filterChainDefinitions为资源过滤链，管理资源的访问权限
        从上到下匹配，匹配到立即返回
        anon——匿名
        authc——需认证
        authc,roles[admin]——需认证且身份为admin
        authc，perms[user:edit]——需认证，且需拥有user:edit权限
        authcBase——需httpBasic认证
        ssl——需https协议访问
    -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
        <property name="loginUrl" value="/login.jsp"/>
        <property name="successUrl" value="http://baidu.com"/>
        <property name="unauthorizedUrl" value="//google.com"/>

        <property name="filterChainDefinitions">
            <value>
                /login.jsp=anon
                /login=anon
                /logout=logout
                /**=anon
            </value>
        </property>
    </bean>

</beans>